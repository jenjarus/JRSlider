var JRSlider;(()=>{"use strict";var __webpack_modules__={369:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ app)\n});\n\n;// CONCATENATED MODULE: ./src/js/jrslider.js\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*\r\n    JenjaRusSlider - слайдер\r\n    Copyright (c) 2022 JenjaRus\r\n*/\nfunction JRSlider() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = {\n    elem: '.jrslider',\n    // Селектор с блоком слайдов\n    slidesShow: 1,\n    // Количество показываемых слайдов\n    slidesScroll: 1,\n    // Количество пролистываемых слайдов\n    speed: 500,\n    // Время пролистывания\n    loop: true,\n    // Бесконечное зацикливание слайдера\n    autoplay: false,\n    // Автоматическое пролистывание\n    autoplayHover: false,\n    // Ставить на паузу пролистывание при наведении\n    interval: 5000,\n    // Интервал между пролистыванием элементов (мс)\n    arrows: true,\n    // Пролистывание стрелками\n    customPrev: false,\n    // Назначение элемента для кнопки назад\n    customNext: false,\n    // Назначение элемента для кнопки вперед\n    dots: true,\n    // Точки навигации\n    customDots: false,\n    // Изменить место прикрепления точек навигации\n    swipe: true,\n    // Пролистывание свайпом\n    responsive: false,\n    // Адаптив\n    currentSlide: {} // Текущий слайд для каждого созданного слайдера\n\n  };\n  var config = extend(options, defaults);\n  var sliderList = document.querySelectorAll(config.elem);\n\n  if (sliderList.length) {\n    for (var i = 0; i < sliderList.length; i++) {\n      checkResponsive(sliderList[i], config, i);\n    }\n\n    window.addEventListener('resize', function () {\n      for (var _i = 0; _i < sliderList.length; _i++) {\n        checkResponsive(sliderList[_i], config, _i);\n      }\n    });\n  }\n}\n\nfunction createSlider(sliders, config, indexSlider) {\n  config.slidesScroll = 1; // Временно, до следующей версии\n\n  var currentSlide; // Глобальное значение текущего слайда\n\n  var allowTransition = true; // Флаг возможности перемещения слайда (дает анимации полностью отрабоать)\n  // Создание обертки элементов слайдера\n\n  sliders.classList.add('jrslider-init');\n  sliders.innerHTML = \"<div class='slider-wrap'>\" + sliders.innerHTML + \"</div>\";\n  var slidersItems = sliders.querySelector('.slider-wrap').children;\n  var sliderWrap = sliders.querySelector('.slider-wrap'); // Создание обертки навигационных кнопок\n\n  var sliderNav = document.createElement(\"div\");\n  sliderNav.classList.add(\"slider-nav\");\n  sliders.appendChild(sliderNav);\n\n  if (config.loop) {\n    cloneElements();\n  }\n\n  if (config.arrows) {\n    if (config.customPrev) {\n      createCustomPrevButton();\n    } else {\n      createPrevButton();\n    }\n\n    if (config.customNext) {\n      createCustomNextButton();\n    } else {\n      createNextButton();\n    }\n  }\n\n  if (config.dots) {\n    if (config.customDots) {\n      createCustomDots();\n    } else {\n      createDots();\n    }\n  }\n\n  if (config.autoplay) {\n    autoPlay();\n  }\n\n  if (config.swipe) {\n    createSwipe();\n  }\n\n  init(); // === Создание элементов ===\n  // Создание кнопки назад\n\n  function createPrevButton() {\n    var prevButton = document.createElement(\"a\");\n    prevButton.classList.add('slider-button__prev', 'slider-button');\n    sliderNav.appendChild(prevButton);\n    prevButton.addEventListener('click', function () {\n      moveTo(currentSlide - config.slidesScroll);\n    });\n  } // Создание кнопки вперед\n\n\n  function createNextButton() {\n    var nextButton = document.createElement(\"a\");\n    nextButton.classList.add('slider-button__next', 'slider-button');\n    sliderNav.appendChild(nextButton);\n    nextButton.addEventListener('click', function () {\n      moveTo(currentSlide + config.slidesScroll);\n    });\n  } // Назначить кнопку назад на кастомный элемент\n\n\n  function createCustomPrevButton() {\n    var prevButton = document.querySelector(config.customPrev);\n    prevButton.classList.add('slider-button');\n    prevButton.addEventListener('click', function () {\n      moveTo(currentSlide - config.slidesScroll);\n    });\n  } // Назначить кнопку вперед на кастомный элемент\n\n\n  function createCustomNextButton() {\n    var nextButton = document.querySelector(config.customNext);\n    nextButton.classList.add('slider-button');\n    nextButton.addEventListener('click', function () {\n      moveTo(currentSlide + config.slidesScroll);\n    });\n  } // Автоматическое пролистывание слайдов\n\n\n  function autoPlay() {\n    var autoPlayInterval; // Переменная с setInterval\n\n    var autoPlayHandle = function autoPlayHandle() {\n      moveTo(currentSlide + config.slidesScroll);\n    };\n\n    autoPlayInterval = setInterval(autoPlayHandle, config.interval);\n\n    if (!config.autoplayHover) {\n      sliders.addEventListener(\"pointerover\", function () {\n        return clearTimeout(autoPlayInterval);\n      });\n      sliders.addEventListener(\"pointerout\", function () {\n        return autoPlayInterval = setInterval(autoPlayHandle, config.interval);\n      });\n    }\n  } // Создание Точек\n\n\n  function createDots() {\n    var dot = document.createElement(\"div\");\n    sliderNav.appendChild(dot);\n    cycleCreateDots(dot);\n  } // Создание Точек в кастомном элементе\n\n\n  function createCustomDots() {\n    var dot = document.querySelector(config.customDots);\n    cycleCreateDots(dot);\n  } // Создание клонов в конце и начале слайдера\n\n\n  function cloneElements() {\n    var cloneFirst = [];\n    var cloneLast = [];\n\n    for (var i = 0; i < checkClone(); i++) {\n      var firstSlide = slidersItems[i];\n      cloneFirst.push(firstSlide.cloneNode(true));\n    }\n\n    for (var _i2 = slidersItems.length - 1; _i2 >= slidersItems.length - checkClone(); _i2--) {\n      var lastSlide = slidersItems[_i2];\n      cloneLast.push(lastSlide.cloneNode(true));\n    }\n\n    for (var _i3 = 0, _cloneFirst = cloneFirst; _i3 < _cloneFirst.length; _i3++) {\n      var element = _cloneFirst[_i3];\n      element.classList.add('clone');\n      sliderWrap.appendChild(element);\n    }\n\n    for (var _i4 = 0, _cloneLast = cloneLast; _i4 < _cloneLast.length; _i4++) {\n      var _element = _cloneLast[_i4];\n\n      _element.classList.add('clone');\n\n      sliderWrap.insertBefore(_element, slidersItems[0]);\n    }\n  } // === Создание элементов END ===\n  // === Перемещение ===\n  // Изменение позиции в слайдере\n\n\n  function transitionMove(step) {\n    sliderWrap.style.transform = \"translateX(-\".concat(offset(), \"px)\");\n\n    var _iterator = _createForOfIteratorHelper(slidersItems),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var element = _step.value;\n        element.classList.remove(\"active\");\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    for (var i = step; i <= step + config.slidesScroll - 1; i++) {\n      if (i < slidersItems.length) {\n        slidersItems[i].classList.add(\"active\");\n      }\n    }\n\n    if (config.dots) {\n      if (config.customDots) {\n        var dots = document.querySelectorAll(config.customDots + \" .slider-dots__item\");\n        cycleActiveDots(dots, step);\n      } else {\n        var _dots = sliders.querySelectorAll(\".slider-dots__item\");\n\n        cycleActiveDots(_dots, step);\n      }\n    }\n\n    if (config.arrows) {\n      checkButtonLoop();\n    }\n  } // Добавление style transition. По окончанию transition переход на конец или начало слайдера\n\n\n  function addTransition() {\n    sliderWrap.style.transition = \"transform \".concat(config.speed, \"ms\");\n    setTimeout(function () {\n      sliderWrap.style.transition = '';\n      loopBeginEnd();\n      allowTransition = true;\n    }, config.speed);\n  } // Перемещение сладов\n\n\n  function moveTo(step) {\n    if (allowTransition) {\n      if (config.loop || !(step >= slidersItems.length || step < 0)) {\n        currentSlide = step;\n      }\n\n      addTransition();\n      transitionMove(currentSlide);\n      config.currentSlide[indexSlider] = currentSlide;\n    }\n\n    allowTransition = false;\n  } // Отключение стрелки, если это крайний слайд\n\n\n  function checkButtonLoop() {\n    if (currentSlide - config.slidesScroll < 0) {\n      if (config.customPrev) {\n        document.querySelector(config.customPrev).classList.add('disabled');\n      } else {\n        sliders.querySelector('.slider-button__prev').classList.add('disabled');\n      }\n    } else {\n      if (config.customPrev) {\n        document.querySelector(config.customPrev).classList.remove('disabled');\n      } else {\n        sliders.querySelector('.slider-button__prev').classList.remove('disabled');\n      }\n    }\n\n    if (currentSlide + config.slidesScroll >= slidersItems.length) {\n      if (config.customNext) {\n        document.querySelector(config.customNext).classList.add('disabled');\n      } else {\n        sliders.querySelector('.slider-button__next').classList.add('disabled');\n      }\n    } else {\n      if (config.customNext) {\n        document.querySelector(config.customNext).classList.remove('disabled');\n      } else {\n        sliders.querySelector('.slider-button__next').classList.remove('disabled');\n      }\n    }\n  } // \"Бесшовное\" перемещение в конец или начало в зацикленном слайдере\n\n\n  function loopBeginEnd() {\n    if (config.loop) {\n      if (currentSlide > slidersItems.length - checkClone() * 2) {\n        currentSlide = checkClone();\n        transitionMove(currentSlide);\n      } else if (currentSlide <= 0) {\n        currentSlide = slidersItems.length - checkClone() * 2;\n        transitionMove(currentSlide);\n      }\n    }\n  } // Пролистывание свайпом\n\n\n  function createSwipe() {\n    var posX1 = 0;\n    var posX2 = 0;\n    var posInitial;\n    var posFinal;\n    var threshold = sliders.offsetWidth * 0.3; // Растояние до срабатывания свайпа\n\n    var swipeStart = function swipeStart(e) {\n      e.preventDefault();\n      posInitial = getTransformX(sliderWrap);\n\n      if (e.type === 'touchstart') {\n        posX1 = e.touches[0].clientX;\n      } else {\n        posX1 = e.clientX;\n        document.onmouseup = swipeEnd;\n        document.onmousemove = swipeAction;\n      }\n    };\n\n    var swipeEnd = function swipeEnd() {\n      posFinal = getTransformX(sliderWrap);\n\n      if (posFinal - posInitial < -threshold) {\n        moveTo(currentSlide + config.slidesScroll);\n      } else if (posFinal - posInitial > threshold) {\n        moveTo(currentSlide - config.slidesScroll);\n      } else {\n        addTransition(); // При переключении слайжов добавляет transition\n\n        sliderWrap.style.transform = \"translateX(\".concat(posInitial, \"px)\");\n      }\n\n      document.onmouseup = null;\n      document.onmousemove = null;\n    };\n\n    var swipeAction = function swipeAction(e) {\n      if (e.type === 'touchmove') {\n        posX2 = posX1 - e.touches[0].clientX;\n        posX1 = e.touches[0].clientX;\n      } else {\n        posX2 = posX1 - e.clientX;\n        posX1 = e.clientX;\n      }\n\n      sliderWrap.style.transform = \"translateX(\".concat(getTransformX(sliderWrap) - posX2, \"px)\");\n    }; // Получаем число из стиля transformX\n\n\n    var getTransformX = function getTransformX(el) {\n      return +el.style.transform.replace(/[^-\\d.]/g, '');\n    };\n\n    sliderWrap.onmousedown = swipeStart;\n    sliderWrap.addEventListener('touchstart', swipeStart);\n    sliderWrap.addEventListener('touchend', swipeEnd);\n    sliderWrap.addEventListener('touchmove', swipeAction);\n  } // === Перемещение END ===\n  // === Инициализация слайдера ===\n\n\n  function init() {\n    if (config.currentSlide[indexSlider]) {\n      currentSlide = config.currentSlide[indexSlider];\n    } else {\n      if (config.loop) {\n        currentSlide = config.slidesScroll;\n      } else {\n        currentSlide = 0;\n      }\n    }\n\n    transitionMove(currentSlide);\n\n    var _iterator2 = _createForOfIteratorHelper(slidersItems),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var element = _step2.value;\n        element.style.width = sliderItemWidth() + 'px';\n      } // Назначение ширины одного слайда\n\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    sliderWrap.style.width = slidersItems.length * sliderItemWidth() + 'px'; // Назначение ширины \"карусели\" слайдов\n  } // === Инициализация слайдера END ===\n  // === Вспомогательные функции ===\n  // Ширина одного слайда\n\n\n  function sliderItemWidth() {\n    return sliders.offsetWidth / config.slidesShow;\n  } // Расстояние перемещения слайдов для текущего шага\n\n\n  function offset() {\n    var step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : currentSlide;\n    return sliderItemWidth() * step;\n  } // Цикл для создания точек\n\n\n  function cycleCreateDots(dot) {\n    dot.classList.add(\"slider-dots\");\n\n    if (config.loop) {\n      var _loop = function _loop(i) {\n        var dots = document.createElement(\"span\");\n        dots.classList.add('slider-dots__item');\n        dot.appendChild(dots);\n        dots.addEventListener('click', function () {\n          moveTo(i + 1);\n        });\n      };\n\n      for (var i = checkClone() - 1; i < slidersItems.length - checkClone() * 2; i += checkClone()) {\n        _loop(i);\n      }\n    } else {\n      var _loop2 = function _loop2(_i5) {\n        var dots = document.createElement(\"span\");\n        dots.classList.add('slider-dots__item');\n        dot.appendChild(dots);\n        dots.addEventListener('click', function () {\n          moveTo(_i5);\n        });\n      };\n\n      for (var _i5 = 0; _i5 < slidersItems.length; _i5 += config.slidesScroll) {\n        _loop2(_i5);\n      }\n    }\n  } // Цикл изменения точек\n\n\n  function cycleActiveDots(dots, step) {\n    var loop = config.loop ? 1 : 0;\n\n    var _iterator3 = _createForOfIteratorHelper(dots),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var element = _step3.value;\n        element.classList.remove(\"active\");\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    if (dots[step / checkClone() - loop]) {\n      dots[step / checkClone() - loop].classList.add(\"active\");\n    }\n  } // Выводит сколько сделано клонов на одной стороне\n\n\n  function checkClone() {\n    return config.slidesScroll > config.slidesShow ? config.slidesScroll : config.slidesShow;\n  } // === Вспомогательные функции END ===\n\n} // Проверка значений в responsive\n\n\nfunction checkResponsive(sliders, config, indexSlider) {\n  var windowsWidth = window.innerWidth; // Ширина экрана\n\n  var flagResponsive = true; // Проверка на наличие элементов в слайдере\n\n  if (!sliders.children.length) {\n    return false;\n  }\n\n  if (config.responsive) {\n    config.responsive.sort(function (prev, next) {\n      return next.breakpoint - prev.breakpoint;\n    }); // Responsive значения config\n\n    var _iterator4 = _createForOfIteratorHelper(config.responsive),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var element = _step4.value;\n\n        if (windowsWidth <= element.breakpoint) {\n          flagResponsive = false;\n          config = extend(element.settings, config);\n          reCreateSlider(sliders, config, indexSlider);\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  } // Стандартные значения config\n\n\n  if (flagResponsive) {\n    reCreateSlider(sliders, config, indexSlider);\n  }\n} // Пересоздать слайдер\n\n\nfunction reCreateSlider(sliders, options, indexSlider) {\n  // Если слайдер создан, то тогда он удаляется\n  if (sliders.classList.contains('jrslider-init')) {\n    destroySlider(sliders);\n  }\n\n  createSlider(sliders, options, indexSlider);\n} // Удаляет элементы связанные со слайдером\n\n\nfunction destroySlider(sliders) {\n  var cloneItems = [];\n\n  var _iterator5 = _createForOfIteratorHelper(sliders.querySelectorAll(\".clone\")),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var _element2 = _step5.value;\n\n      _element2.remove();\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  var slidersItems = sliders.querySelectorAll('.slider-wrap > *');\n\n  var _iterator6 = _createForOfIteratorHelper(slidersItems),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var _element3 = _step6.value;\n      cloneItems.push(_element3.cloneNode(true));\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n\n  sliders.classList.remove('jrslider-init');\n  sliders.querySelector(\".slider-wrap\").remove();\n  sliders.querySelector(\".slider-nav\").remove();\n\n  for (var _i6 = 0, _cloneItems = cloneItems; _i6 < _cloneItems.length; _i6++) {\n    var element = _cloneItems[_i6];\n    element.classList.remove('active');\n    element.style = '';\n    sliders.appendChild(element);\n  }\n}\n\nfunction extend(options, defaults) {\n  for (var key in defaults) {\n    if (options[key] == null) {\n      var value = defaults[key];\n      options[key] = value;\n    }\n  }\n\n  return options;\n}\n;// CONCATENATED MODULE: ./src/app.js\n\n\n/* harmony default export */ const app = (JRSlider);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///369\n")}},__webpack_require__={d:(n,t)=>{for(var g in t)__webpack_require__.o(t,g)&&!__webpack_require__.o(n,g)&&Object.defineProperty(n,g,{enumerable:!0,get:t[g]})},o:(n,t)=>Object.prototype.hasOwnProperty.call(n,t)},__webpack_exports__={};__webpack_modules__[369](0,__webpack_exports__,__webpack_require__),JRSlider=__webpack_exports__.default})();